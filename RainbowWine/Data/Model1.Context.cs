//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RainbowWine.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class rainbowwineEntities : DbContext
    {
        public rainbowwineEntities()
            : base("name=rainbowwineEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AppLogApi> AppLogApis { get; set; }
        public virtual DbSet<AppLog> AppLogs { get; set; }
        public virtual DbSet<AppLogsCashFreeHook> AppLogsCashFreeHooks { get; set; }
        public virtual DbSet<AppLogsPaytmHook> AppLogsPaytmHooks { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<Banner> Banners { get; set; }
        public virtual DbSet<CallbackPushApi> CallbackPushApis { get; set; }
        public virtual DbSet<CancelOption> CancelOptions { get; set; }
        public virtual DbSet<CashFreePay> CashFreePays { get; set; }
        public virtual DbSet<CashFreeRefund> CashFreeRefunds { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<CustomerAddress> CustomerAddresses { get; set; }
        public virtual DbSet<CustomerContact> CustomerContacts { get; set; }
        public virtual DbSet<CustomerEmailSend> CustomerEmailSends { get; set; }
        public virtual DbSet<CustomerEta> CustomerEtas { get; set; }
        public virtual DbSet<CustomerOTPVerify> CustomerOTPVerifies { get; set; }
        public virtual DbSet<CustomerPayPin> CustomerPayPins { get; set; }
        public virtual DbSet<CustomerSMSSend> CustomerSMSSends { get; set; }
        public virtual DbSet<DeliveryAgentLogin> DeliveryAgentLogins { get; set; }
        public virtual DbSet<DeliveryAgent> DeliveryAgents { get; set; }
        public virtual DbSet<DeliveryAgentTime> DeliveryAgentTimes { get; set; }
        public virtual DbSet<DeliveryAgentTrack> DeliveryAgentTracks { get; set; }
        public virtual DbSet<DeliveryBackToStore> DeliveryBackToStores { get; set; }
        public virtual DbSet<DeliveryHour> DeliveryHours { get; set; }
        public virtual DbSet<DeliveryJob> DeliveryJobs { get; set; }
        public virtual DbSet<DeliveryPayment> DeliveryPayments { get; set; }
        public virtual DbSet<DeliverySlot> DeliverySlots { get; set; }
        public virtual DbSet<DeliveryZone> DeliveryZones { get; set; }
        public virtual DbSet<DelManageShop> DelManageShops { get; set; }
        public virtual DbSet<DiscountMaster> DiscountMasters { get; set; }
        public virtual DbSet<DiscountProduct> DiscountProducts { get; set; }
        public virtual DbSet<DumpRoutePlan> DumpRoutePlans { get; set; }
        public virtual DbSet<Favorite> Favorites { get; set; }
        public virtual DbSet<FcmUser> FcmUsers { get; set; }
        public virtual DbSet<Inventory> Inventories { get; set; }
        public virtual DbSet<InventoryMixer> InventoryMixers { get; set; }
        public virtual DbSet<InventoryTMP> InventoryTMPs { get; set; }
        public virtual DbSet<InventoryTrack> InventoryTracks { get; set; }
        public virtual DbSet<MerchantTran> MerchantTrans { get; set; }
        public virtual DbSet<Mixer> Mixers { get; set; }
        public virtual DbSet<MixerSize> MixerSizes { get; set; }
        public virtual DbSet<NewsLetter> NewsLetters { get; set; }
        public virtual DbSet<NotificationType> NotificationTypes { get; set; }
        public virtual DbSet<Notify> Notifies { get; set; }
        public virtual DbSet<NotifyHandle> NotifyHandles { get; set; }
        public virtual DbSet<NotifyOrder> NotifyOrders { get; set; }
        public virtual DbSet<OrderDetail> OrderDetails { get; set; }
        public virtual DbSet<OrderDetailModify> OrderDetailModifies { get; set; }
        public virtual DbSet<OrderDetailModifyOriginal> OrderDetailModifyOriginals { get; set; }
        public virtual DbSet<OrderIssue> OrderIssues { get; set; }
        public virtual DbSet<OrderIssueDetail> OrderIssueDetails { get; set; }
        public virtual DbSet<OrderIssueDetailOriginal> OrderIssueDetailOriginals { get; set; }
        public virtual DbSet<OrderIssueTicket> OrderIssueTickets { get; set; }
        public virtual DbSet<OrderIssueTrack> OrderIssueTracks { get; set; }
        public virtual DbSet<OrderIssueType> OrderIssueTypes { get; set; }
        public virtual DbSet<OrderModify> OrderModifies { get; set; }
        public virtual DbSet<OrderModifyTrack> OrderModifyTracks { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<OrderStatu> OrderStatus { get; set; }
        public virtual DbSet<OrderTrack> OrderTracks { get; set; }
        public virtual DbSet<PayLink> PayLinks { get; set; }
        public virtual DbSet<PaymentCashFreeLog> PaymentCashFreeLogs { get; set; }
        public virtual DbSet<PaymentLinkLog> PaymentLinkLogs { get; set; }
        public virtual DbSet<PaymentRefund> PaymentRefunds { get; set; }
        public virtual DbSet<PaymentType> PaymentTypes { get; set; }
        public virtual DbSet<PremiumProductRecomm> PremiumProductRecomms { get; set; }
        public virtual DbSet<PriceRange> PriceRanges { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<ProductBarcodeLink> ProductBarcodeLinks { get; set; }
        public virtual DbSet<ProductBrand> ProductBrands { get; set; }
        public virtual DbSet<ProductCategory> ProductCategories { get; set; }
        public virtual DbSet<ProductCategoryLink> ProductCategoryLinks { get; set; }
        public virtual DbSet<ProductDetail> ProductDetails { get; set; }
        public virtual DbSet<ProductLog> ProductLogs { get; set; }
        public virtual DbSet<ProductNotThere> ProductNotTheres { get; set; }
        public virtual DbSet<ProductRecom> ProductRecoms { get; set; }
        public virtual DbSet<ProductRecomCustomer> ProductRecomCustomers { get; set; }
        public virtual DbSet<ProductSearch> ProductSearches { get; set; }
        public virtual DbSet<ProductSize> ProductSizes { get; set; }
        public virtual DbSet<Rating> Ratings { get; set; }
        public virtual DbSet<RatingOption> RatingOptions { get; set; }
        public virtual DbSet<RatingProductReview> RatingProductReviews { get; set; }
        public virtual DbSet<RatingReview> RatingReviews { get; set; }
        public virtual DbSet<RatingStar> RatingStars { get; set; }
        public virtual DbSet<RoutePlan> RoutePlans { get; set; }
        public virtual DbSet<RUser> RUsers { get; set; }
        public virtual DbSet<ShopMerchant> ShopMerchants { get; set; }
        public virtual DbSet<TravelMode> TravelModes { get; set; }
        public virtual DbSet<UserRefreshToken> UserRefreshTokens { get; set; }
        public virtual DbSet<UserType> UserTypes { get; set; }
        public virtual DbSet<WineShop> WineShops { get; set; }
        public virtual DbSet<InventoryDetail> InventoryDetails { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<MixerOrderItem> MixerOrderItems { get; set; }
        public virtual DbSet<MixerDetail> MixerDetails { get; set; }
        public virtual DbSet<Page> Pages { get; set; }
        public virtual DbSet<PageButton> PageButtons { get; set; }
        public virtual DbSet<PageContent> PageContents { get; set; }
        public virtual DbSet<PageImage> PageImages { get; set; }
        public virtual DbSet<PageVersion> PageVersions { get; set; }
        public virtual DbSet<PromoApply> PromoApplies { get; set; }
        public virtual DbSet<PromoCode> PromoCodes { get; set; }
        public virtual DbSet<PromoType> PromoTypes { get; set; }
        public virtual DbSet<DeliveryEarning> DeliveryEarnings { get; set; }
        public virtual DbSet<ReferralCommission> ReferralCommissions { get; set; }
        public virtual DbSet<ReferralType> ReferralTypes { get; set; }
        public virtual DbSet<ReferralUser> ReferralUsers { get; set; }
        public virtual DbSet<MixerBarcodeLink> MixerBarcodeLinks { get; set; }
        public virtual DbSet<MixerProductLink> MixerProductLinks { get; set; }
        public virtual DbSet<MixerIssueDetail> MixerIssueDetails { get; set; }
        public virtual DbSet<MixerIssueDetailOriginal> MixerIssueDetailOriginals { get; set; }
        public virtual DbSet<DeliveryAgentType> DeliveryAgentTypes { get; set; }
        public virtual DbSet<WeekDay> WeekDays { get; set; }
        public virtual DbSet<GiftBagDetail> GiftBagDetails { get; set; }
        public virtual DbSet<GiftBagInventory> GiftBagInventories { get; set; }
        public virtual DbSet<GiftBagMaster> GiftBagMasters { get; set; }
        public virtual DbSet<GiftBagOrderItemIssueDetail> GiftBagOrderItemIssueDetails { get; set; }
        public virtual DbSet<GiftBagOrderItemIssueDetailOriginal> GiftBagOrderItemIssueDetailOriginals { get; set; }
        public virtual DbSet<GiftBagOrderItem> GiftBagOrderItems { get; set; }
    
        public virtual ObjectResult<Customer_Signup_Result> Customer_Signup()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Customer_Signup_Result>("Customer_Signup");
        }
    
        public virtual ObjectResult<CustomerContact_Sel_Result> CustomerContact_Sel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustomerContact_Sel_Result>("CustomerContact_Sel");
        }
    
        public virtual ObjectResult<GetReviewDetails_Sel_Result> GetReviewDetails_Sel(Nullable<int> customerId, Nullable<int> orderID)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetReviewDetails_Sel_Result>("GetReviewDetails_Sel", customerIdParameter, orderIDParameter);
        }
    
        public virtual int InventoryOrder_Upd(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InventoryOrder_Upd", orderIdParameter);
        }
    
        public virtual ObjectResult<Invertory_Sel_Result> Invertory_Sel(string productName, string shopName)
        {
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var shopNameParameter = shopName != null ?
                new ObjectParameter("ShopName", shopName) :
                new ObjectParameter("ShopName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Invertory_Sel_Result>("Invertory_Sel", productNameParameter, shopNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Issue_ByPacker_Ins(string odetailIds, string userId, Nullable<int> orderid)
        {
            var odetailIdsParameter = odetailIds != null ?
                new ObjectParameter("odetailIds", odetailIds) :
                new ObjectParameter("odetailIds", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var orderidParameter = orderid.HasValue ?
                new ObjectParameter("Orderid", orderid) :
                new ObjectParameter("Orderid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Issue_ByPacker_Ins", odetailIdsParameter, userIdParameter, orderidParameter);
        }
    
        public virtual ObjectResult<LastOrderDetails_Sel_Result> LastOrderDetails_Sel(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LastOrderDetails_Sel_Result>("LastOrderDetails_Sel", customerIdParameter);
        }
    
        public virtual ObjectResult<NotificationDetails_Shop_ProductWise_Result> NotificationDetails_Shop_ProductWise(Nullable<int> shopId, Nullable<int> prouctId, Nullable<int> customerId)
        {
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("ShopId", shopId) :
                new ObjectParameter("ShopId", typeof(int));
    
            var prouctIdParameter = prouctId.HasValue ?
                new ObjectParameter("ProuctId", prouctId) :
                new ObjectParameter("ProuctId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NotificationDetails_Shop_ProductWise_Result>("NotificationDetails_Shop_ProductWise", shopIdParameter, prouctIdParameter, customerIdParameter);
        }
    
        public virtual int Notify_OrderDelivery_Ins(Nullable<int> customerId, Nullable<int> orderId, ObjectParameter result)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Notify_OrderDelivery_Ins", customerIdParameter, orderIdParameter, result);
        }
    
        public virtual ObjectResult<Notify_OrderDelivery_Sel_Result> Notify_OrderDelivery_Sel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Notify_OrderDelivery_Sel_Result>("Notify_OrderDelivery_Sel");
        }
    
        public virtual int Notify_OrderDelivery_Update(Nullable<int> notifyId)
        {
            var notifyIdParameter = notifyId.HasValue ?
                new ObjectParameter("NotifyId", notifyId) :
                new ObjectParameter("NotifyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Notify_OrderDelivery_Update", notifyIdParameter);
        }
    
        public virtual int Notify_ProductAval_Ins(Nullable<int> prouctID, Nullable<int> shopId, Nullable<int> customerId, ObjectParameter result)
        {
            var prouctIDParameter = prouctID.HasValue ?
                new ObjectParameter("ProuctID", prouctID) :
                new ObjectParameter("ProuctID", typeof(int));
    
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("ShopId", shopId) :
                new ObjectParameter("ShopId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Notify_ProductAval_Ins", prouctIDParameter, shopIdParameter, customerIdParameter, result);
        }
    
        public virtual ObjectResult<Order_Zone_Sel_Result> Order_Zone_Sel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Order_Zone_Sel_Result>("Order_Zone_Sel");
        }
    
        public virtual int OrderDetail_IssueDetail_Upd(Nullable<int> orderIssueId, Nullable<int> orderId)
        {
            var orderIssueIdParameter = orderIssueId.HasValue ?
                new ObjectParameter("OrderIssueId", orderIssueId) :
                new ObjectParameter("OrderIssueId", typeof(int));
    
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OrderDetail_IssueDetail_Upd", orderIssueIdParameter, orderIdParameter);
        }
    
        public virtual ObjectResult<OrderDetails_sel_Result> OrderDetails_sel(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OrderDetails_sel_Result>("OrderDetails_sel", orderIdParameter);
        }
    
        public virtual ObjectResult<Orders_ByCustomer_Sel_Result> Orders_ByCustomer_Sel(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Orders_ByCustomer_Sel_Result>("Orders_ByCustomer_Sel", customerIdParameter);
        }
    
        public virtual ObjectResult<Orders_Details_Sel_Result> Orders_Details_Sel(Nullable<int> orderStatusId)
        {
            var orderStatusIdParameter = orderStatusId.HasValue ?
                new ObjectParameter("OrderStatusId", orderStatusId) :
                new ObjectParameter("OrderStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Orders_Details_Sel_Result>("Orders_Details_Sel", orderStatusIdParameter);
        }
    
        public virtual ObjectResult<Packer_Count_Sel_Result> Packer_Count_Sel(Nullable<int> shopID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Packer_Count_Sel_Result>("Packer_Count_Sel", shopIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> PaymentLinkLog_Refund_Sel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PaymentLinkLog_Refund_Sel");
        }
    
        public virtual ObjectResult<PaymentLinkLog_Sel_Result> PaymentLinkLog_Sel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PaymentLinkLog_Sel_Result>("PaymentLinkLog_Sel");
        }
    
        public virtual int PaymentLinkLogs_Active_Upd(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PaymentLinkLogs_Active_Upd", orderIdParameter);
        }
    
        public virtual int PaymentRefund_Active_Upd(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PaymentRefund_Active_Upd", orderIdParameter);
        }
    
        public virtual ObjectResult<PaymentRefund_Refund_Sel_Result> PaymentRefund_Refund_Sel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PaymentRefund_Refund_Sel_Result>("PaymentRefund_Refund_Sel");
        }
    
        public virtual ObjectResult<ProductDetails_AllVolumn_Sel_Result> ProductDetails_AllVolumn_Sel(Nullable<int> shopID, Nullable<int> productID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductDetails_AllVolumn_Sel_Result>("ProductDetails_AllVolumn_Sel", shopIDParameter, productIDParameter);
        }
    
        public virtual ObjectResult<ProductDetails_ById_Sel_Result> ProductDetails_ById_Sel(Nullable<int> shopID, Nullable<int> productID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductDetails_ById_Sel_Result>("ProductDetails_ById_Sel", shopIDParameter, productIDParameter);
        }
    
        public virtual ObjectResult<ProductDetails_Filter_Sel_Result> ProductDetails_Filter_Sel(Nullable<int> shopID, string productCategoryID, Nullable<double> priceStart, Nullable<double> priceEnd)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var productCategoryIDParameter = productCategoryID != null ?
                new ObjectParameter("ProductCategoryID", productCategoryID) :
                new ObjectParameter("ProductCategoryID", typeof(string));
    
            var priceStartParameter = priceStart.HasValue ?
                new ObjectParameter("PriceStart", priceStart) :
                new ObjectParameter("PriceStart", typeof(double));
    
            var priceEndParameter = priceEnd.HasValue ?
                new ObjectParameter("PriceEnd", priceEnd) :
                new ObjectParameter("PriceEnd", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductDetails_Filter_Sel_Result>("ProductDetails_Filter_Sel", shopIDParameter, productCategoryIDParameter, priceStartParameter, priceEndParameter);
        }
    
        public virtual ObjectResult<ProductDetails_Recom_Sel_Result> ProductDetails_Recom_Sel(Nullable<int> shopId)
        {
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("ShopId", shopId) :
                new ObjectParameter("ShopId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductDetails_Recom_Sel_Result>("ProductDetails_Recom_Sel", shopIdParameter);
        }
    
        public virtual ObjectResult<ProductDetails_Sel_Result> ProductDetails_Sel(Nullable<int> shopID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductDetails_Sel_Result>("ProductDetails_Sel", shopIDParameter);
        }
    
        public virtual ObjectResult<ProductDetails_StartFilter_Sel_Result> ProductDetails_StartFilter_Sel(Nullable<int> shopID, Nullable<double> startPrice, Nullable<double> endPrice)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var startPriceParameter = startPrice.HasValue ?
                new ObjectParameter("StartPrice", startPrice) :
                new ObjectParameter("StartPrice", typeof(double));
    
            var endPriceParameter = endPrice.HasValue ?
                new ObjectParameter("EndPrice", endPrice) :
                new ObjectParameter("EndPrice", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductDetails_StartFilter_Sel_Result>("ProductDetails_StartFilter_Sel", shopIDParameter, startPriceParameter, endPriceParameter);
        }
    
        public virtual ObjectResult<RoutePlan_ByAgent_Sel_Result> RoutePlan_ByAgent_Sel(Nullable<int> deliveryAgentId)
        {
            var deliveryAgentIdParameter = deliveryAgentId.HasValue ?
                new ObjectParameter("DeliveryAgentId", deliveryAgentId) :
                new ObjectParameter("DeliveryAgentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RoutePlan_ByAgent_Sel_Result>("RoutePlan_ByAgent_Sel", deliveryAgentIdParameter);
        }
    
        public virtual ObjectResult<RoutePlan_Delivery_Sel_Result> RoutePlan_Delivery_Sel(Nullable<int> deliveryAgentId, Nullable<int> statusId)
        {
            var deliveryAgentIdParameter = deliveryAgentId.HasValue ?
                new ObjectParameter("DeliveryAgentId", deliveryAgentId) :
                new ObjectParameter("DeliveryAgentId", typeof(int));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RoutePlan_Delivery_Sel_Result>("RoutePlan_Delivery_Sel", deliveryAgentIdParameter, statusIdParameter);
        }
    
        public virtual ObjectResult<RoutePlan_DeliveryTrack_Sel_Result> RoutePlan_DeliveryTrack_Sel(Nullable<int> deliveryAgentId, Nullable<int> statusId, string jobId)
        {
            var deliveryAgentIdParameter = deliveryAgentId.HasValue ?
                new ObjectParameter("DeliveryAgentId", deliveryAgentId) :
                new ObjectParameter("DeliveryAgentId", typeof(int));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var jobIdParameter = jobId != null ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RoutePlan_DeliveryTrack_Sel_Result>("RoutePlan_DeliveryTrack_Sel", deliveryAgentIdParameter, statusIdParameter, jobIdParameter);
        }
    
        public virtual ObjectResult<Routeplan_DelManager_sel_Result> Routeplan_DelManager_sel(string userId, Nullable<int> shopID, Nullable<int> orderId, Nullable<int> orderIssueId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var orderIssueIdParameter = orderIssueId.HasValue ?
                new ObjectParameter("OrderIssueId", orderIssueId) :
                new ObjectParameter("OrderIssueId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Routeplan_DelManager_sel_Result>("Routeplan_DelManager_sel", userIdParameter, shopIDParameter, orderIdParameter, orderIssueIdParameter);
        }
    
        public virtual ObjectResult<RoutePlan_Packed_Sel_Result> RoutePlan_Packed_Sel(Nullable<int> shopId)
        {
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("ShopId", shopId) :
                new ObjectParameter("ShopId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RoutePlan_Packed_Sel_Result>("RoutePlan_Packed_Sel", shopIdParameter);
        }
    
        public virtual ObjectResult<RoutePlan_Packing_Sel_Result> RoutePlan_Packing_Sel(Nullable<int> shopId)
        {
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("ShopId", shopId) :
                new ObjectParameter("ShopId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RoutePlan_Packing_Sel_Result>("RoutePlan_Packing_Sel", shopIdParameter);
        }
    
        public virtual ObjectResult<RoutePlanDump_Packing_Sel_Result> RoutePlanDump_Packing_Sel(Nullable<int> shopId)
        {
            var shopIdParameter = shopId.HasValue ?
                new ObjectParameter("ShopId", shopId) :
                new ObjectParameter("ShopId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RoutePlanDump_Packing_Sel_Result>("RoutePlanDump_Packing_Sel", shopIdParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int UserType_Ins(Nullable<int> userTypeId, string userTypeName, string flag, ObjectParameter output)
        {
            var userTypeIdParameter = userTypeId.HasValue ?
                new ObjectParameter("UserTypeId", userTypeId) :
                new ObjectParameter("UserTypeId", typeof(int));
    
            var userTypeNameParameter = userTypeName != null ?
                new ObjectParameter("UserTypeName", userTypeName) :
                new ObjectParameter("UserTypeName", typeof(string));
    
            var flagParameter = flag != null ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserType_Ins", userTypeIdParameter, userTypeNameParameter, flagParameter, output);
        }
    
        public virtual ObjectResult<UserType_Sel_Result> UserType_Sel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserType_Sel_Result>("UserType_Sel");
        }
    
        public virtual ObjectResult<USP_Get_LoginDetails_Result> USP_Get_LoginDetails(string phoneNo)
        {
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_Get_LoginDetails_Result>("USP_Get_LoginDetails", phoneNoParameter);
        }
    
        public virtual int USP_INSERT_Notificatios(Nullable<int> customerId, Nullable<int> notificationTypeId, Nullable<int> orderId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var notificationTypeIdParameter = notificationTypeId.HasValue ?
                new ObjectParameter("NotificationTypeId", notificationTypeId) :
                new ObjectParameter("NotificationTypeId", typeof(int));
    
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_INSERT_Notificatios", customerIdParameter, notificationTypeIdParameter, orderIdParameter);
        }
    
        public virtual int USP_INSERT_RatingDetails(Nullable<int> rating, string title, string review, string comment, Nullable<int> customerId, Nullable<int> orderId, ObjectParameter result)
        {
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("Rating", rating) :
                new ObjectParameter("Rating", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var reviewParameter = review != null ?
                new ObjectParameter("Review", review) :
                new ObjectParameter("Review", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_INSERT_RatingDetails", ratingParameter, titleParameter, reviewParameter, commentParameter, customerIdParameter, orderIdParameter, result);
        }
    
        public virtual int USP_ModifyOTP(string p_otpno, string p_phoneNo, ObjectParameter result)
        {
            var p_otpnoParameter = p_otpno != null ?
                new ObjectParameter("p_otpno", p_otpno) :
                new ObjectParameter("p_otpno", typeof(string));
    
            var p_phoneNoParameter = p_phoneNo != null ?
                new ObjectParameter("p_phoneNo", p_phoneNo) :
                new ObjectParameter("p_phoneNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ModifyOTP", p_otpnoParameter, p_phoneNoParameter, result);
        }
    
        public virtual ObjectResult<string> vwProduct_Any_Sel(Nullable<int> shopID, string search)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("vwProduct_Any_Sel", shopIDParameter, searchParameter);
        }
    
        public virtual ObjectResult<PenaltyDetails_Agent_Month_Result> PenaltyDetails_Agent_Month(Nullable<int> agentId, Nullable<int> currMonth)
        {
            var agentIdParameter = agentId.HasValue ?
                new ObjectParameter("AgentId", agentId) :
                new ObjectParameter("AgentId", typeof(int));
    
            var currMonthParameter = currMonth.HasValue ?
                new ObjectParameter("CurrMonth", currMonth) :
                new ObjectParameter("CurrMonth", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PenaltyDetails_Agent_Month_Result>("PenaltyDetails_Agent_Month", agentIdParameter, currMonthParameter);
        }
    
        public virtual ObjectResult<PenaltyDetails_Sel_Result> PenaltyDetails_Sel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PenaltyDetails_Sel_Result>("PenaltyDetails_Sel");
        }
    }
}
