@model RainbowWine.Models.ProductAdmin

@{
    ViewBag.Title = "Edit";
}


@using (Html.BeginForm("Edit", "ProductAdmin", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product Detail</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.Hidden("prodId", @Model.ProductID)
        @Html.HiddenFor(model => model.ProductID)
     

        <div class="form-group">
            @Html.LabelFor(model => model.MasterProductName, "App Product Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MasterProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MasterProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, "Product Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PackingSize, "Packing Size", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PackingSize, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PackingSize, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Category, (IEnumerable<SelectListItem>)@ViewBag.ProductCategory, "Select Category", htmlAttributes: new { @class = "form-control", @id = "ddlProductCategory" })
            </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductSize, "Size", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ProductSizeId, (IEnumerable<SelectListItem>)@ViewBag.ProductSize, "Select Product Size", htmlAttributes: new { @class = "form-control", @id = "ddlProductSizeId" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IsDelete, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsDelete)
                    @Html.ValidationMessageFor(model => model.IsDelete, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default"  onclick="validate()"/>
            </div>
        </div>
    </div>
}
<p>@*@Html.ActionLink("Barcode", "Index", "ProductBarcode")*@</p>

<div class="col-md-2">
    @Html.ActionLink("Back to List", "Index")
</div>
<div class="col-md-2">
    <button id="btnSearch">Barcode Details</button>
</div>

@section scripts{
    <script>
        function SubmitForm() {
            if (confirm('Are you sure do you want to update the Product.'))
                return true;

            return false;
        }

        
        $('#btnSearch').click(function () {
            var prodid = $('#prodId').val();
            window.location = "/ProductBarcode/index?pdId=" + prodid;

            //if (shopid != '' || statusid != '' || soid != '') {
            //    window.location = "/orders/index?shopId=" + shopid + "&shopname=" + shopname + "&statusId=" + statusid + "&statusname=" + statusname + "&soid=" + soid;
            //}
        });
    </script>
    
}