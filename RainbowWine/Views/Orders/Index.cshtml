@model IEnumerable<RainbowWine.Data.Order>
@using Microsoft.AspNet.Identity
@{ ViewBag.Title = "Index";
    string userType = ViewBag.UserType as string;
    bool logonly = (string.Compare(User.Identity.GetUserName(), "cash1@rainmail.com", true) == 0); }

@section scripts{
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script>
        $("#txtShopSearch").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/orders/SearchShop",
                    data: {
                        text: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (item) {
                            console.log(item);
                            return { label: item.Name, value: item.Name, Id: item.Id };
                        }))
                    }
                });
            },
            minLength: 2,
            select: function (event, ui) {
                console.log("Selected: " + ui.item.value + " aka " + ui.item.label + " Id " + ui.item.Id);
                var sid = ui.item.Id;
                $('#dpShopId').val(sid).attr("selected", "selected");
            }
        });
        $("#txtStatusSearch").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/orders/SearchStatus",
                    data: {
                        text: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (item) {
                            console.log(item);
                            return { label: item.Name, value: item.Name, Id: item.Id };
                        }))
                    }
                });
            },
            minLength: 2,
            select: function (event, ui) {
                console.log("Selected: " + ui.item.value + " aka " + ui.item.label + " Id " + ui.item.Id);
                var sid = ui.item.Id;
                $('#dpStatusId').val(sid).attr("selected", "selected");
            }
        });
        $("#txtOrderSearch").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/orders/SearchOrder",
                    data: {
                        text: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (item) {
                            console.log(item);
                            return { label: item.Name, value: item.Name, Id: item.Id };
                        }))
                    }
                });
            },
            minLength: 2,
            select: function (event, ui) {
                console.log("Selected: " + ui.item.value + " aka " + ui.item.label + " Id " + ui.item.Id);

            }
        });
        $("#txtContactSearch").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/orders/SearchCustNumber",
                    data: {
                        text: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (item) {
                            console.log(item);
                            return { label: item.Name, value: item.Name, Id: item.Id };
                        }))
                    }
                });
            },
            minLength: 2,
            select: function (event, ui) {
                console.log("Selected: " + ui.item.value + " aka " + ui.item.label + " Id " + ui.item.Id);

            }
        });
        $('#btnSearch').click(function () {
            var shopid = $('#dpShopId').val();
            var shopname = $('#txtShopSearch').val();
            var statusid = $('#dpStatusId').val();
            var statusname = $('#txtStatusSearch').val();
            var soid = $('#txtOrderSearch').val();
            var custno = $('#txtContactSearch').val();
            console.log(shopid + " | " + statusid);
            window.location = "/orders/index?shopId=" + shopid + "&shopname=" + shopname + "&statusId=" + statusid + "&statusname=" + statusname + "&soid=" + soid + "&custno=" + custno;

            //if (shopid != '' || statusid != '' || soid != '') {
            //    window.location = "/orders/index?shopId=" + shopid + "&shopname=" + shopname + "&statusId=" + statusid + "&statusname=" + statusname + "&soid=" + soid;
            //}
        })
        $('#btnBulkResend').click(function () {
            var bulkDate = $('#txtBukDate').val();

            if (bulkDate != '') {
                $.post("/orders/ReSendBulkPaytmLink",
                    { "id": id },
                    function (data) {
                        console.log(data);
                        if (data.status == '0') {
                            alert("Resend link send successfully.");
                        }
                        else if (data.status == '1') {
                            alert("There is no such Order.");
                        }
                        else if (data.status == '2') {
                            alert("Paytm payment link not yet generated.");
                        }
                        else if (data.status == '3') {
                            alert("Max limit cross resend link.");
                        }
                    }
                );
            }
        })
        function resendlink(id) {
            if (id > 0) {
                $.post("/orders/ReSendPaytmLink",
                    { "id": id },
                    function (data) {
                        console.log(data);
                        if (data.status == '1') {
                            alert("There is no such Order.");
                        }
                        else if (data.status == '2') {
                            alert("Paytm payment link not yet generated.");
                        }
                        else if (data.status == '3') {
                            alert("Max limit cross resend link.");
                        }
                    }
                );
                return false;
            }
        }
        function reassignvalidate(id) {
            if (confirm("Are you sure do you want to reassign the order.") == true) {

                console.log(id);
                $('#frmReassign' + id).submit();
                return false;
            }
            return false;
        }
        function refundvalid(id) {
            if (confirm("Are you sure do you want to refund the order amount.") == true) {

                console.log(id);
                $('#frmRefund' + id).submit();
                return false;
            }
            return false;
        }
    </script>
}
<h2>Orders</h2>
@if (ViewBag.MessageCall != null)
{
<script type="text/javascript">

            window.onload = function () {
                alert("@ViewBag.MessageCall");
            };
</script>
}

@if (ViewBag.Message != null)
{
<script type="text/javascript">

            window.onload = function () {
                alert("@ViewBag.Message");
            };
</script>}
@if (ViewBag.Msg != null)
{
<script type="text/javascript">

            window.onload = function () {
                alert("@ViewBag.Msg");
            };
</script>
 } @*<table border="0" align="right">
        <tr>
            <td>
                <input type="text" id="txtBukDate" placeholder="2020-05-21" />
            </td>
            <td>
                <button id="btnBulkResend"> Bulk Resend</button>
            </td>
        </tr>
    </table>*@

<table border="0" cellpadding="1" cellspacing="1">
    <tr>
        @if (userType.ToLower() == "shopper")
        {
<td>
    <input type="text" placeholder="Shop Name" id="txtShopSearch" value="@ViewBag.ShopName" />
    @Html.DropDownList("dpShopId", (IEnumerable<SelectListItem>)@ViewBag.ShopId, "Select Shop", htmlAttributes: new { @class = "form-control", @id = "dpShopId", @style = "display:none;" })
</td>
}
        @if (userType.ToLower() == "shopper" || userType.ToLower() == "packer" || userType.ToLower() == "deliverymanager")
        {
<td>
    <input type="text" placeholder="Status" id="txtStatusSearch" value="@ViewBag.StatusName" />
    @Html.DropDownList("dpStatusId", (IEnumerable<SelectListItem>)@ViewBag.StatusId, "Select Status", htmlAttributes: new { @class = "form-control", @id = "dpStatusId", @style = "display:none;" })
</td>
}
        <td>
            <input type="text" placeholder="Order Id" id="txtOrderSearch" value="@(ViewBag.soid==0?"":ViewBag.soid)" />
        </td>
        <td>
            <input type="text" placeholder="Contact No" id="txtContactSearch" value="@(string.IsNullOrWhiteSpace(ViewBag.CustNo)?"":ViewBag.CustNo)" />
        </td>
        <td>
            <button id="btnSearch"> Search</button>
        </td>
    </tr>
</table>
@*<p>
        @Html.ActionLink("Create New","Create","CustomerOrder")
    </p>*@
<table class="table">
    <tr>
        <th>
            Order No
        </th>
        <th>
            Time/Date
        </th>
        @*<th>
            AgentName
        </th>*@
        @if (userType.ToLower() == "agent")
        {
            <th>
            </th>
            <th>
                ETA End Time
            </th> 
            } 
        @if (userType.ToLower() == "shopper")
        {
        <th>
            Customer Contact No.
        </th>}
        <th>
            Order Amount
        </th>
        <th>
            Customer Name
        </th>
        <th>
            Shop
        </th>
        <th>
            Status
        </th>
        <th>
            Payment Type
        </th>
        <th>
            Gift
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
<tr>
    <td>
        @Html.DisplayFor(modelItem => item.Id)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.OrderDate)
    </td>
    @*<td>
            @Html.DisplayFor(modelItem => item.OrderPlacedBy)
        </td>*@
    @if (userType.ToLower() == "agent")
    {
<td>
    @Html.DisplayFor(modelItem => item.EtaStartTime)
</td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EtaEndTime)
                    </td> } 
     @if (userType.ToLower() == "shopper")
     {
        <td>
        @Convert.ToInt64(item.OrderTo)
        </td>}
    <td>
        @Html.DisplayFor(modelItem => item.OrderAmount)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Customer.CustomerName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.WineShop.ShopName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.OrderStatu.OrderStatusName)
    </td>
    <td>
        @(((item.PaymentTypeId == 2 || (item.PaymentTypeId == 4) ? "Postpaid" : "Prepaid")))
    </td>
    <td>
        @if (item.IsGift == true)
        {
            <div>Yes</div>
        }
        else
        {
            <div>No</div>
        }
    </td>
    <td>
        @if (userType.ToLower() == "shopper")
        {
    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) @(" ")
                        @Html.ActionLink("Track", "History", new { id = item.Id }) @(" ")
                                            @Html.RouteLink("Modify", "GetUpdateOrderByAgent", new { id = item.Id }) @(" ")
                                                                @Html.ActionLink("Move", "Edit1", new { id = item.Id })}
        @if (userType.ToLower() == "packer")
        {
    @Html.ActionLink("Details", "Pack", new { id = item.Id }) }
else
{
    if (userType.ToLower() == "deliverymanager" || userType.ToLower() == "hub" || userType.ToLower() == "agent")
    {
    @Html.ActionLink("Track", "History", new { id = item.Id }) if (item.OrderType == "w")
    { @(" | ")
                                    @Html.RouteLink("Modify", "GetUpdateOrderByAgent", new { id = item.Id }) }
                            }
                            else
                            {
        @Html.ActionLink("Details", "Details", new { id = item.Id }) }
    if (userType.ToLower() == "deliverymanager" || (userType.ToLower() == "agent" && (item.OrderStatusId == 1 || item.OrderStatusId == 35)))
    { @(" | ")
                                @Html.ActionLink("Details", "Details", new { id = item.Id }) }

                            if (item.OrderStatusId == 27 && userType.ToLower() == "deliverymanager")
                            { @(" | ") using (Html.BeginForm("UpdateBackToStoreTo", "Orders", FormMethod.Post, new { @id = $"frmReassign{item.Id}" }))
                                {
        <input type="hidden" id="orderId" name="orderId" value="@item.Id" />
                                    <a id="linReassign" onclick="javascript: reassignvalidate('@item.Id'); return false;" style="cursor: pointer;">Reassign</a>}
                            }
                        }
        @if (userType.ToLower() == "shopper")
        {
    @Html.ActionLink("Delete", "Delete", new { id = item.Id }) if (item.OrderStatusId == 3 && logonly)
    {
        using (Html.BeginForm("RefundAmt", "Orders", FormMethod.Post, new { @id = $"frmRefund{item.Id}" }))
        {
    <input type="hidden" id="orderId" name="orderId" value="@item.Id" />
                                <a id="linRefund" onclick="javascript: refundvalid('@item.Id'); return false;" style="cursor: pointer;">Refund</a>}
                        }
                    }
        @if (userType.ToLower() == "agent" || userType.ToLower() == "hub" || userType.ToLower() == "deliverymanager" || userType.ToLower() == "orderfullfillment" || userType.ToLower() == "salesmanager" || userType.ToLower() == "supplier")
        {@(" | ")
                                @Html.ActionLink("Call", "Call", new { id = item.Id }, new { onclick = $"return confirm('Do you want to connect to this customer? You will be connecting via this extension: {ViewBag.InterUserContNo}');" })}@(" | ")
        @Html.ActionLink("LiveTracking", "LiveTracking", new {Controller="Orders", id = item.Id }, new { target = "_blank" })
    </td>
</tr>
}
    @if (Model.Count() <= 0)
    {
<tr>
    <td colspan="10">
        No Record Found.
    </td>
</tr>
}
</table>