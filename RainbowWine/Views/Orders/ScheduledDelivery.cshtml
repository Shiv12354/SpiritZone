@model IEnumerable<RainbowWine.Services.DO.ScheduledDeliveriesDO>
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "Index";
    string userType = ViewBag.UserType as string;
    bool logonly = (string.Compare(User.Identity.GetUserName(), "cash1@rainmail.com", true) == 0);
}

@section scripts{
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script>
        $("#txtShopSearch").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/orders/SearchShop",
                    data: {
                        text: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (item) {
                            console.log(item);
                            return { label: item.Name, value: item.Name, Id: item.Id };
                        }))
                    }
                });
            },
            minLength: 2,
            select: function (event, ui) {
                console.log("Selected: " + ui.item.value + " aka " + ui.item.label + " Id " + ui.item.Id);
                var sid = ui.item.Id;
                $('#dpShopId').val(sid).attr("selected", "selected");
            }
        });
        $("#txtStatusSearch").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/orders/SearchStatus",
                    data: {
                        text: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (item) {
                            console.log(item);
                            return { label: item.Name, value: item.Name, Id: item.Id };
                        }))
                    }
                });
            },
            minLength: 2,
            select: function (event, ui) {
                console.log("Selected: " + ui.item.value + " aka " + ui.item.label + " Id " + ui.item.Id);
                var sid = ui.item.Id;
                $('#dpStatusId').val(sid).attr("selected", "selected");
            }
        });
        $("#txtOrderSearch").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/orders/SearchOrder",
                    data: {
                        text: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (item) {
                            console.log(item);
                            return { label: item.Name, value: item.Name, Id: item.Id };
                        }))
                    }
                });
            },
            minLength: 2,
            select: function (event, ui) {
                console.log("Selected: " + ui.item.value + " aka " + ui.item.label + " Id " + ui.item.Id);

            }
        });
        $("#txtContactSearch").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/orders/SearchCustNumber",
                    data: {
                        text: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (item) {
                            console.log(item);
                            return { label: item.Name, value: item.Name, Id: item.Id };
                        }))
                    }
                });
            },
            minLength: 2,
            select: function (event, ui) {
                console.log("Selected: " + ui.item.value + " aka " + ui.item.label + " Id " + ui.item.Id);

            }
        });
        $('#btnSearch').click(function () {
            var shopid = $('#dpShopId').val();
            var shopname = $('#txtShopSearch').val();
            var statusid = $('#dpStatusId').val();
            var statusname = $('#txtStatusSearch').val();
            var soid = $('#txtOrderSearch').val();
            var custno = $('#txtContactSearch').val();
            console.log(shopid + " | " + statusid);
            window.location = "/orders/ScheduledDelivery?shopId=" + shopid + "&shopname=" + shopname + "&statusId=" + statusid + "&statusname=" + statusname + "&soid=" + soid + "&custno=" + custno;

            //if (shopid != '' || statusid != '' || soid != '') {
            //    window.location = "/orders/index?shopId=" + shopid + "&shopname=" + shopname + "&statusId=" + statusid + "&statusname=" + statusname + "&soid=" + soid;
            //}
        })
        $('#btnBulkResend').click(function () {
            var bulkDate = $('#txtBukDate').val();

            if (bulkDate != '') {
                $.post("/orders/ReSendBulkPaytmLink",
                    { "id": id },
                    function (data) {
                        console.log(data);
                        if (data.status == '0') {
                            alert("Resend link send successfully.");
                        }
                        else if (data.status == '1') {
                            alert("There is no such Order.");
                        }
                        else if (data.status == '2') {
                            alert("Paytm payment link not yet generated.");
                        }
                        else if (data.status == '3') {
                            alert("Max limit cross resend link.");
                        }
                    }
                );
            }
        })
        function resendlink(id) {
            if (id > 0) {
                $.post("/orders/ReSendPaytmLink",
                    { "id": id },
                    function (data) {
                        console.log(data);
                        if (data.status == '1') {
                            alert("There is no such Order.");
                        }
                        else if (data.status == '2') {
                            alert("Paytm payment link not yet generated.");
                        }
                        else if (data.status == '3') {
                            alert("Max limit cross resend link.");
                        }
                    }
                );
                return false;
            }
        }
        function reassignvalidate(id) {
            if (confirm("Are you sure do you want to reassign the order.") == true) {

                console.log(id);
                $('#frmReassign' + id).submit();
                return false;
            }
            return false;
        }
        function refundvalid(id) {
            if (confirm("Are you sure do you want to refund the order amount.") == true) {

                console.log(id);
                $('#frmRefund' + id).submit();
                return false;
            }
            return false;
        }
    </script>
}
<h2>Scheduled Deliveries</h2>
@*<table border="0" align="right">
        <tr>
            <td>
                <input type="text" id="txtBukDate" placeholder="2020-05-21" />
            </td>
            <td>
                <button id="btnBulkResend"> Bulk Resend</button>
            </td>
        </tr>
    </table>*@

<table border="0" cellpadding="1" cellspacing="1">
    <tr>
        @*@if (userType.ToLower() == "shopper")
        {
            <td>
                <input type="text" placeholder="Shop Name" id="txtShopSearch" value="@ViewBag.ShopName" />
                @Html.DropDownList("dpShopId", (IEnumerable<SelectListItem>)@ViewBag.ShopId, "Select Shop", htmlAttributes: new { @class = "form-control", @id = "dpShopId", @style = "display:none;" })
            </td>
        }
        @if (userType.ToLower() == "shopper" || userType.ToLower() == "packer" || userType.ToLower() == "deliverymanager")
        {
            <td>
                <input type="text" placeholder="Status" id="txtStatusSearch" value="@ViewBag.StatusName" />
                @Html.DropDownList("dpStatusId", (IEnumerable<SelectListItem>)@ViewBag.StatusId, "Select Status", htmlAttributes: new { @class = "form-control", @id = "dpStatusId", @style = "display:none;" })
            </td>
        }*@
        <td>
            <input type="text" placeholder="Order Id" id="txtOrderSearch" value="@(ViewBag.soid==0?"":ViewBag.soid)" />
        </td>
        @if (userType.ToLower() == "shopper")
        {
            <td>
                <input type="text" placeholder="Contact No" id="txtContactSearch" value="@(string.IsNullOrWhiteSpace(ViewBag.CustNo)?"":ViewBag.CustNo)" />
            </td>

            <td>
                <input type="text" placeholder="Shop Name" id="txtShopSearch" value="@ViewBag.ShopName" />
                @Html.DropDownList("dpShopId", (IEnumerable<SelectListItem>)@ViewBag.ShopId, "Select Shop", htmlAttributes: new { @class = "form-control", @id = "dpShopId", @style = "display:none;" })
            </td>
        }
        <td>
            <button id="btnSearch"> Search</button>
        </td>
    </tr>
</table>
@*<p>
        @Html.ActionLink("Create New","Create","CustomerOrder")
    </p>*@
<table class="table">
    <tr>
        <th>
            Order No
        </th>
        <th>
            Order Date
        </th>
        @if (userType.ToLower() == "shopper")
        {
            <th>
                Customer Contact No.
            </th>
        }
            <th>
                Order Amount
            </th>
            <th>
                Customer Name
            </th>
            <th>
                Shop Name
            </th>
            <th>
                Status
            </th>

            <th>
                Delivery Start
            </th>
            <th>
                Delivery End
            </th>
            <th>
                Payment Type
            </th>
            <th>Action</th>
        </tr>

    @foreach (var item in Model)
    {
<tr>
    <td>
        @Html.DisplayFor(modelItem => item.OrderId)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.OrderDate)
    </td>
    @if (userType.ToLower() == "shopper")
    {
        <td>
            @Html.DisplayFor(modelItem => item.ContactNo)
        </td>
    }
        <td>
            @Html.DisplayFor(modelItem => item.OrderAmount)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CustomerName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ShopName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.OrderStatusName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ScheduledStart)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ScheduledEnd)
        </td>


        <td>
            @(((item.PaymentTypeId == 2 || (item.PaymentTypeId == 4) ? "Postpaid" : "Prepaid")))
        </td>
        <td>
            @if (userType.ToLower() == "packer")
            {
                @Html.ActionLink("Details", "Pack", new { id = item.OrderId })
            }
            else
            {
                @Html.ActionLink("Details", "Details", new { id = item.OrderId }) @:|

                @Html.ActionLink("Track", "History", new { id = item.OrderId }) @:|

                @Html.ActionLink("Release", "Release", new { id = item.OrderId }, new { onclick = "return confirm('Are you sure you want to update the scheduled start time?')" })
            }
        </td>
    </tr>
    }
    @if (Model.Count() <= 0)
    {
        <tr>
            <td colspan="10">
                No Record Found.
            </td>
        </tr>
    }
</table>