@model IEnumerable<RainbowWine.Services.DO.ConfigurableETADO>

@{
    ViewBag.Title = "List";
    var grid = new WebGrid(Model, canPage: true, rowsPerPage: 10, selectionFieldName: "selectedRow", ajaxUpdateContainerId: "gridContent");
    grid.Pager(WebGridPagerModes.FirstLast);

}
<h2>Configuration List</h2>
<br />
<h3>
    @Html.ActionLink("Config Master", "ConfigMaster")
</h3>
<br />
@if(ViewBag.Msg != null)
{
<script type="text/javascript">

            window.onload = function () {
                alert("@ViewBag.Msg");
            };
</script>

}
<table>
    <tr>
        <td>Dry Date</td><td><input type="text"   style="width: 100px;" id="txtDryDay" /></td>
        <td>
            <button id="btnSubmit"> Save</button>
        </td>
    </tr>
</table>


@if (Model != null && Model.Count() > 0)
{
<div>
    @grid.GetHtml(tableStyle: "table",
                    headerStyle: "",
                    alternatingRowStyle: "alt",
                    selectedRowStyle: "select",
                    htmlAttributes: new { @id = "WebGrid" },
                    columns: grid.Columns(

grid.Column("Id",
format:@<text>
        @Html.ActionLink(((int)item.ConfigurableETAId).ToString(), "Edit", new { id = item.ConfigurableETAId })
</text>),
grid.Column("Del Start Hours", style: "col2",
format:@<text>
                @Html.Label((string)item.DeliveryStartHours, new { @class = "normal-mode", style = "width: 100px;" })
                @Html.TextBox("ContactNo-Edit", ((string)item.DeliveryStartHours).ToString(), new { @class = "edit-mode txttimepicker", style = "width: 100px;", @id = "DeliveryStartHours" })
                @*<input type="text" class="edit-mode" style="width: 100px;" value="@item.DeliveryStartHours" id="DeliveryStartHours" />*@

</text>
),
grid.Column("Del End Hours", style: "col2",
format:@<text>
                @Html.Label((string)item.DeliveryEndHours, new { @class = "normal-mode" })
                <input type="text" class="edit-mode txttimepicker" style="width: 100px;" value="@item.DeliveryEndHours" id="DeliveryEndHours" />
</text>
),
grid.Column("Shop Name", style: "col4",
format:@<text>
                @Html.Label(((string)item.ShopName).ToString(), new { @class = "normal-mode", @Id = "ShopName" })
                @Html.TextBox("ShopName", ((string)item.ShopName).ToString(), new { @class = "hide", style = "width: 100px;", @id = "ShopName" })
                @Html.TextBox("ShopId", ((Int32)item.ShopId).ToString(), new { @class = "hide", style = "width: 100px;", @id = "ShopId" })
                @Html.DropDownList("dpShopId", (IEnumerable<SelectListItem>)@ViewBag.Shops, "Select Shop", htmlAttributes: new { @class = "edit-mode", style = "width: 100px;", @id = "dpShopId" })
</text>
),
grid.Column("Dry Day", style: "col6",
format: @<text>
                @Html.Label(((DateTime)item.DryDay).ToString("dd/MM/yyyy"), new { @class = "normal-mode", style = "width: 100px;" })
                <input type="text" class="edit-mode DryDayDatePicker" style="width: 100px;" value="@item.DryDay" id="DryDay" />
</text>
),
grid.Column("First Del Start", style: "col6",
format: @<text>
                @Html.Label(((string)item.FirstDeliverySTInMin).ToString(), new { @class = "normal-mode" })
                <input type="text" class="edit-mode txttimepicker" style="width: 100px;" value="@item.FirstDeliverySTInMin" id="FirstDeliverySTInMin" />
</text>
),
grid.Column("First Del End", style: "col6",
format: @<text>
                @Html.Label(((string)item.FirstDeliveryETInMin).ToString(), new { @class = "normal-mode" })
                <input type="text" class="edit-mode txttimepicker" style="width: 100px;" value="@item.FirstDeliveryETInMin" id="FirstDeliveryETInMin" />
</text>
),
grid.Column("Del Deadline Start", style: "col6",
format: @<text>
                @Html.Label(((Int32)item.DelDeadLineStart).ToString(), new { @class = "normal-mode" })
                <input type="number" class="edit-mode" style="width: 100px;" value="@item.DelDeadLineStart" id="DelDeadLineStart" />
</text>
),
grid.Column("Del Deadline End", style: "col6",
format: @<text>
                @Html.Label(((Int32)item.DelDeadLineEnd).ToString(), new { @class = "normal-mode" })
                <input type="number" class="edit-mode" style="width: 100px;" value="@item.DelDeadLineEnd" id="DelDeadLineEnd" />
</text>
),
grid.Column("Remarks", style: "col6",
format: @<text>
                @Html.Label(((string)item.Remarks).ToString(), new { @class = "normal-mode" })
                <input type="text" class="edit-mode" data-date="@item.Remarks" id="Remarks" />
                @*@Html.TextArea("Description-Edit", ((string)item.Remarks).ToString(), new { style = "width: 100;", @class = "edit-mode" })*@
</text>
), grid.Column("",
style: "col7",
format: @<text><div style="padding-left:20px;">
                    <button class="btn btn-default edit-item display-mode " id="@item.ConfigurableETAId">Edit</button>
                    <button class="btn btn-default save-item edit-mode" id="@item.ConfigurableETAId">Save</button>
                    <button class="btn btn-default cancel-item edit-mode" id="@item.ConfigurableETAId">Cancel</button>
                </div>
</text>)
)
)

</div>
}
else
{
    <h3>No Data</h3>
}

@section scripts{
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

    <script src="~/Scripts/jquery.timepicker.min.js"></script>
    <link href="~/Scripts/jquery.timepicker.min.css" rel="stylesheet" />
    <script type="text/javascript">
        $(document).ready(function () {
            $('.txttimepicker').timepicker({
                timeFormat: 'HH:mm',
                interval: 5,
                //minTime: '10',
                //maxTime: '10:00pm',
                //defaultTime: '12',
                //startTime: '10:00',
                dynamic: false,
                dropdown: true,
                scrollbar: true
            });

            $('.DryDayDatePicker').datepicker({
                dateFormat: 'dd/mm/yy'
            });

            $('#txtDryDay').datepicker({
                
            });


        });
    </script>
    <script>
        $('.edit-mode').hide();
        $('.edit-item').on('click', function () {
            $('.edit-mode').hide();
            $('.delete-mode').hide();
            $('.display-mode').show();
            var tr = $(this).parents('tr:first');
            var shopName = tr.find('#ShopName').text();            
            tr.find("#dpShopId option:selected").text(shopName);
            tr.find('.edit-mode, .display-mode').toggle();
        });
        $('.cancel-item').on('click', function () {
            var tr = $(this).parents('tr:first');
            tr.find('.display-mode,.edit-mode').toggle();
        });
        $('.save-item').on('click', function () {
            var tr = $(this).parents('tr:first');
            var ConfigurableETAId = $(this).prop('id');
            var DeliveryStartHours = tr.find('#DeliveryStartHours').val();
            var DeliveryEndHours = tr.find('#DeliveryEndHours').val();
            var ShopNameId = tr.find('#ShopId').val();
            var shopId = tr.find("#dpShopId option:selected").val();
            var DryDay = tr.find('#DryDay').val();
            var FirstDeliverySTInMin = tr.find('#FirstDeliverySTInMin').val();
            var FirstDeliveryETInMin = tr.find('#FirstDeliveryETInMin').val();
            var DelDeadLineStart = tr.find('#DelDeadLineStart').val();
            var DelDeadLineEnd = tr.find('#DelDeadLineEnd').val();
            var Remarks = tr.find('#Remarks').val();
            if (Remarks == '') {
                alert("Please Enter Remarks");
                return true;
            }
            if (shopId == '') {
                shopId = ShopNameId;
            }
            $.post(
                '/Orders/UpdateConfigurableETADetail/',
                {
                    configurableETAId: ConfigurableETAId,
                    deliveryStartHours: DeliveryStartHours,
                    deliveryEndHours: DeliveryEndHours,
                    shopId: shopId,
                    dryDay: DryDay,
                    firstDeliverySTInMin: FirstDeliverySTInMin,
                    firstDeliveryETInMin: FirstDeliveryETInMin,
                    delDeadLineStart: DelDeadLineStart,
                    delDeadLineEnd: DelDeadLineEnd,
                    remarks: Remarks
                },
                function (item) {
                    //tr.find('#ShopName').text(item.ShopName);
                    //tr.find("#OperationalFlag option:selected").text(item.OperationalFlag);
                    //tr.find("#dpShopId option:selected").text(item.ShopID);
                    alert(item.Message);
                    if (item.status == true)
                        window.location.replace("ConfigurableETA");
                }, "json");
            tr.find('.edit-mode, .display-mode').toggle();
        });

       
    </script>
    <script>
         $('#btnSubmit').click(function () {
             var dryDay = $('#txtDryDay').val();
            
            if (dryDay == '' || dryDay == null) {
                alert("Please Select Date First Then Try To Update Dry Day");
                return true;
             }
             if (confirm("Are you sure you want to updated this dry day for all shops")) {
                 window.location = "/orders/UpdateDryDay?dryDay=" + dryDay;
             }
        })
    </script>

}
